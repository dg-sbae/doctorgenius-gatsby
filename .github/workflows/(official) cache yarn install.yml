name: Cache Yarn install

on:
  workflow_dispatch:
    branches: [master]
  push:
    branches: [all]
  pull_request:
    branches: [develop]

jobs:
  runYarn:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: gatsby-cache
          path: .cache
          retention-days: 30

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: gatsby-build
          path: public
          retention-days: 30

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # See: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      # `--prefer-offline` gives cache priority
      - name: Install dependencies
        run: yarn install --prefer-offline --frozen-lockfile

      # Ready to run steps that rely on node_modules
      - name: Build application
        run: yarn build

  beginCD:
    runs-on: ubuntu-latest
    needs: runYarn
    steps:
      - name: Announce deployment
        run: echo Deploying to productuion server/$DESTINATION_CLONED_DIRECTORY

      - name: Pushes to another repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@cp_instead_of_deleting
        env:
          API_TOKEN_GITHUB: ${{ secrets.GATSBY_ACCESS_TOKEN }}
        with:
          source-directory: "output"
          destination-github-username: "dg-jparmenter"
          destination-repository-name: "CD-doctorgenius.com"
          user-email: jparmenter@doctorgenius.com
          commit-message: See ORIGIN_COMMIT

      - name: Test get variable exported by push-to-another-repository
        run: echo $DESTINATION_CLONED_DIRECTORY
